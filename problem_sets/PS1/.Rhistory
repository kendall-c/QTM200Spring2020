SurveySp13[1,1]
predict(HRS_GPA)[1]
resid(HRS_GPA)[1]
rstandard(HRS_GPA)[1]
#two variable linear regression
pairs(~ GPA + sleep + days_drink , data=SurveySp13)
SleepDrink_GPA <- lm(GPA ~ sleep + days_drink , data=SurveySp13)
summary(SleepDrink_GPA)
plot(SurveySp13$hrs_extracurricular,rstandard(HRS_GPA))
pairs(~ GPA + sleep + days_drink , data=SurveySp13)
SleepDrink_GPA <- lm(GPA ~ sleep + days_drink , data=SurveySp13)
summary(SleepDrink_GPA)
summary(SurveySp13$CleanGPA)
#clean data
SurveySp13$CleanGPA <- SurveySp13$GPA
SurveySp13$GPA>4.0
#13th entry is greater than 4.0
SurveySp13$CleanGPA[13]
SurveySp13$CleanGPA[13]<-NA
#check if data is cleaned
SurveySp13$CleanGPA>4.0
hist(SurveySp13$CleanGPA, main="Distribution of GPA")
#find how many observations
summary(SurveySp13$CleanGPA)
favstats(SurveySp13$CleanGPA)
library(mosaic)
favstats(SurveySp13$CleanGPA)
#examine distribution of hours extracurricular
hist(SurveySp13$hrs_extracurricular, main="Distribution of Extracurricular Hours", xlab="Hours Spent in Extracurriculars per Week")
#examine relationship between extracurriculars and GPA
plot(SurveySp13$hrs_extracurricular, SurveySp13$CleanGPA)
cor(SurveySp13$hrs_extracurricular, SurveySp13$CleanGPA)
cor.test(SurveySp13$hrs_extracurricular, SurveySp13$CleanGPA)
cor(SurveySp13$hrs_extracurricular, SurveySp13$CleanGPA)
cor(SurveySp13$CleanGPA, SurveySp13$hrs_extracurricular)
cor(SurveySp13$hrs_extracurricular, SurveySp13$CleanGPA)
?cor
CleanSurvey <- SurveySp13
CleanSurvey$GPA[13] <- NA
summary(CleanSurvey$GPA)
plot(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA)
cor(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA)
na.omit(CleanSurvey)
cor(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA)
?cor
cor(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA, complete.obs)
cor(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA, use = "complete.obs")
plot(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA)
cor(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA, use = "complete.obs")
cor.test(CleanSurvey$hrs_extracurricular, CleanSurvey$GPA)
HRS_GPA <- lm(CleanSurvey$GPA~CleanSurvey$hrs_extracurricular)
summary(HRS_GPA)
confint(HRS_GPA)
hist(rstandard(HRS_GPA), main="Distribution of Standardized Residuals", xlab="Standardized Residuals")
qqnorm(rstandard(HRS_GPA), main="Standardized Residuals")
St_Residuals <- rstandard(HRS_GPA)
plot(SurveySp13$hrs_extracurricular,rstandard(HRS_GPA))
plot(CleanSurvey$hrs_extracurricular,rstandard(HRS_GPA))
?subset
SurveyClean <- subset(SurveySp13, SurveySp13$GPA<4.0)
SurveyClean
SurveyClean$GPA
SurveyClean$GPA>4.0
SurveySp13>4.0
SurveySp13$GPA>4.0
hist(SurveyClean$GPA, main="Distribution of GPA")
favstats(SurveyClean$GPA)
hist(SurveyClean$hrs_extracurricular, main="Distribution of Extracurricular Hours", xlab="Hours Spent in Extracurriculars per Week")
plot(SurveyClean$hrs_extracurricular, CleanSurvey$GPA)
plot(SurveyClean$hrs_extracurricular, SurveyClean$GPA)
cor(SurveyClean$hrs_extracurricular, SurveyClean$GPA, use = "complete.obs")
cor.test(SurveyClean$hrs_extracurricular, SurveyClean$GPA)
HRS_GPA <- lm(SurveyClean$GPA~SurveyClean$hrs_extracurricular)
summary(HRS_GPA)
confint(HRS_GPA)
plot(SurveyClean$hrs_extracurricular,rstandard(HRS_GPA))
plot(SurveyClean$hrs_extracurricular,rstandard(HRS_GPA), xlab="Hours Spent per Week on Extracurriculars", ylab="Standardized Residuals of l;asdkjf")
SurveyClean[1,1]
SurveyClean$GPA[1,1]
SurveyClean$GPA[1,]
SurveyClean$GPA[1]
predict(HRS_GPA)[1]
resid(HRS_GPA)[1]
rstandard(HRS_GPA)[1]
pairs(~ GPA + sleep + days_drink , data=SurveyClean)
SleepDrink_GPA <- lm(GPA ~ sleep + days_drink , data=SurveyClean)
summary(SleepDrink_GPA)
SurveySp13$GPA>4.0
#clean data
SurveySp13$GPA>4.0
#13th entry is greater than 4.0
SurveyClean <- subset(SurveySp13, SurveySp13$GPA<4.0)
#check if data is cleaned
SurveyClean$GPA>4.0
hist(SurveyClean$GPA, main="Distribution of GPA")
#find how many observations
library(mosaic)
favstats(SurveyClean$GPA)
#examine distribution of hours extracurricular
hist(SurveyClean$hrs_extracurricular, main="Distribution of Extracurricular Hours", xlab="Hours Spent in Extracurriculars per Week")
#examine relationship between extracurriculars and GPA
plot(SurveyClean$hrs_extracurricular, SurveyClean$GPA)
cor(SurveyClean$hrs_extracurricular, SurveyClean$GPA)
cor(SurveyClean$hrs_extracurricular, SurveyClean$GPA)
cor.test(SurveyClean$hrs_extracurricular, SurveyClean$GPA)
#linear regression equation
HRS_GPA <- lm(SurveyClean$GPA~SurveyClean$hrs_extracurricular)
summary(HRS_GPA)
summary(HRS_GPA)
#confidence intervals for B0 and B1
confint(HRS_GPA)
confint(HRS_GPA)
#histogram of standardized residuals
hist(rstandard(HRS_GPA), main="Distribution of Standardized Residuals", xlab="Standardized Residuals")
#qq plot of standardized residuals
qqnorm(rstandard(HRS_GPA), main="Standardized Residuals")
plot(SurveyClean$hrs_extracurricular,rstandard(HRS_GPA), xlab="Hours Spent per Week on Extracurriculars", ylab="Standardized Residuals of yhat = 3.374309 + 0.007707x")
plot(SurveyClean$hrs_extracurricular,rstandard(HRS_GPA), xlab="Hours Spent per Week on Extracurriculars", ylab="Standardized Residuals of the line")
#veiwing student one's stats
SurveyClean$GPA[1]
predict(HRS_GPA)[1]
resid(HRS_GPA)[1]
rstandard(HRS_GPA)[1]
SurveyClean$hrs_extracurricular[1]
#veiwing student one's stats
SurveyClean$GPA[1]
SurveyClean$hrs_extracurricular[1]
predict(HRS_GPA)[1]
predict(HRS_GPA)[1]
resid(HRS_GPA)[1]
rstandard(HRS_GPA)[1]
#two variable linear regression
pairs(~ GPA + sleep + days_drink , data=SurveyClean)
SleepDrink_GPA <- lm(GPA ~ sleep + days_drink , data=SurveyClean)
summary(SleepDrink_GPA)
#two variable linear regression
pairs(~ GPA + sleep + days_drink , data=SurveyClean)
SleepDrink_GPA <- lm(GPA ~ sleep + days_drink , data=SurveyClean)
summary(SleepDrink_GPA)
pairs(~ GPA + hrs_extracurricular + Emory_FirstChoice , data=SurveyClean)
HrsFC_GPA <- lm(GPA ~ hrs_extracurricular + Emory_FirstChoice , data=SurveyClean)
pairs(~ GPA + sleep + days_drink , data=SurveyClean)
HrsFC_GPA <- lm(GPA ~ hrs_extracurricular + Emory_FirstChoice , data=SurveyClean)
summary(HrsFC_GPA)
summary(HrsFC_GPA)
confint(HrsFC_GPA)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS1")
#####################
# Problem 1
#####################
#data set
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#setting n as sample size
n <- 25
#finding z-score
z90 <- qnorm((1 - .90)/2, lower.tail = FALSE)
#finding the mean and standard deviation
sample_mean <- mean(y, na.rm = TRUE)
sample_sd <- sd(y, na.rm = TRUE)
#finding the lower and upper bounds of the interval
lower_90 <- sample_mean - (z90 * (sample_sd/sqrt(n)))
upper_90 <- sample_mean + (z90 * (sample_sd/sqrt(n)))
#confidence interval
confint90 <- c(lower_90, upper_90)
confint90
#The confidence interval is (94.13283, 102.74717).
#This means that if we repeated this process 100 times, we can expect 90% of confidence intervals to contain the true population mean.
#####################
# Problem 2
#####################
#data set:
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#find the mean of the sample
mean(y)
#the mean score is 98.44
#one-sample, one-sided t-test:
t.test(y, mu=100, alternative="greater", conf.level = 0.95)
#If the average IQ of the students was 100, the probability of selecting a sample with a mean less than or equal to 98.44 is about 72%.
#####################
# Problem 3
#####################
#data set:
y <- c(1, 2, 1, 3, 4, 1, 1, 4, 2, 1, 3, 4, 3, 2, 1, 3, 4, 1, 2, 3, 1, 1, 2, 1, 1, 3, 4)
#converting numerical values into factor variables:
y2 <- as.character(y)
y2[y=="1"] <- "freshman"
y2[y=="2"] <- "sophomore"
y2[y=="3"] <- "junior"
y2[y=="4"] <- "senior"
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
#plot the relationship between y and x1
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
#plot the relationship between y and x2
plot(expenditure$X2, expenditure$Y, xlab = "Number of residents per thousand under 18", ylab = "Per Capita Education Expenditure")
#plot the relationship between y and x3
plot3 <- plot(expenditure$Y, expenditure$X3)
plot3
#plot the relationship between Y and Region
boxplot1 <- boxplot(expenditure$Region, expenditure$Y)
boxplot1
boxplot
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
expenditure2 <- read.txt("/Users/kendall/GitHub/QTM200Spring2020/problem_sets/PS1/expenditure.txt")
expenditure2 <- read.table("/Users/kendall/GitHub/QTM200Spring2020/problem_sets/PS1/expenditure.txt")
#plot the relationship between y and x1
plot(x = expenditure2$X1, y = expenditure2$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
View(expenditure2)
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
expenditure <- read.table("expenditure.txt", header=T)
#plot the relationship between y and x1
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
y <- c(1, 2, 1, 3, 4, 1, 1, 4, 2, 1, 3, 4, 3, 2, 1, 3, 4, 1, 2, 3, 1, 1, 2, 1, 1, 3, 4)
expenditure <- read.table("expenditure.txt", header=T)
boxplot2 <- boxplot(expenditure$Y~expenditure$X1, col = expenditure$Region, shape = expenditure$Region)
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
#plot the relationship between Y and X1
plot(expenditure$X1, expenditure$Y)
#####################
# load libraries
library(dplyr)
expenditure <- read.table("expenditure.txt", header=T)
#plot the relationship between y and x1
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
plot(expenditure,x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
expenditure <- read.table("expenditure.txt", header=T)
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS1")
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
#plot the relationship between y and x1
plot(expenditure,x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
expenditure <- read.table("expenditure.txt", header=T)
#plot the relationship between y and x1
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
setwd("~/GitHub/QTM200Spring2020")
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS1")
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
#plot the relationship between y and x2
plot(expenditure$X2, expenditure$Y, xlab = "Number of residents per thousand under 18", ylab = "Per Capita Education Expenditure")
#plot the relationship between y and x3
plot3 <- plot(expenditure$Y, expenditure$X3)
#plot the relationship between Y and Region
boxplot1 <- boxplot(expenditure$Y~expenditure$Region, xlab = "Regions", ylab = "Education Expenditures")
#plot the relationship between Y and X1
plot(expenditure$X1, expenditure$Y, xlab = "Per Capita Personal Income", ylab = "Education Expenditures")
boxplot2 <- boxplot(expenditure$Y~expenditure$X1, col = expenditure$Region, shape = expenditure$Region)
#plot the relationship between y and x1
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures")
#plot the relationship between y and x1
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures", main = "Public Education Expenditures (per capita) by Personal Income (per capita)")
#plot the relationship between y and x2
plot(expenditure$X2, expenditure$Y, xlab = "Number of residents per thousand under 18", ylab = "Per Capita Education Expenditure", main = "Public Education Expenditures (per capita) by Number of Residents Under 18 (per thousands)")
#plot the relationship between y and x3
plot3 <- plot(expenditure$Y, expenditure$X3, xlab = "Number of Urban Residents (per thousand)", ylab = "Per Capita Education Expenditures", main = "Public Educaiton Expenditures by Urban Residency")
#plot the relationship between Y and Region
boxplot1 <- boxplot(expenditure$Y~expenditure$Region, xlab = "Regions", ylab = "Education Expenditures")
#plot the relationship between Y and Region
class(expenditure$Region)
class(expenditure$Region)
RegionNames <- as.character(expenditure$Region)
RegionNames[Region=="1"] <- "Northeast"
RegionNames[Region=="2"] <- "North Central"
RegionNames[Region=="3"] <- "South"
RegionNames[Region=="4"] <- "West"
boxplot1 <- boxplot(expenditure$Y~expenditure$RegionNames, xlab = "Region", ylab = "Education Expenditures")
#plot the relationship between Y and Region
class(expenditure$Region)
RegionNames <- as.character(expenditure$Region)
RegionNames[Region=="1"] <- "Northeast"
expenditure$RegionNames <- as.character(expenditure$Region)
expenditure$RegionNames[expenditure$Region=="1"] <- "Northeast"
expenditure$RegionNames[expenditure$Region=="2"] <- "North Central"
expenditure$RegionNames[expenditure$Region=="3"] <- "South"
expenditure$RegionNames[expenditure$Region=="4"] <- "West"
boxplot1 <- boxplot(expenditure$Y~expenditure$RegionNames, xlab = "Region", ylab = "Education Expenditures")
boxplot1 <- boxplot(expenditure$Y~expenditure$RegionNames, xlab = "Region", ylab = "Education Expenditures (per capita)", main = "Public Education Expenditures by Region")
#plot the relationship between Y and X1
plot(expenditure$X1, expenditure$Y, xlab = "Per Capita Personal Income", ylab = "Education Expenditures")
#plot the relationship between Y and X1
plot(expenditure$X1, expenditure$Y, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
boxplot2 <- boxplot(expenditure$Y~expenditure$X1, col = expenditure$RegionNames, shape = expenditure$RegionNames)
#plot the relationship between Y and X1
plot(expenditure$X1, expenditure$Y, col = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#add legend
legend("top left", legend = c("Northeast", "North Central", "South", "West"), col = c("black", "red", "green", "blue"))
#add legend
legend("topleft", legend = c("Northeast", "North Central", "South", "West"), col = c("black", "red", "green", "blue"))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = topo.colors(4), horiz = TRUE, cex = 0.8)
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"))
plot(expenditure$X1, expenditure$Y, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"))
#change plotting symbols
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, pch = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = expenditure$Region)
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = expenditure$RegionNames)
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = c(expenditure$Region))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = c("black", "red", "green", "blue"))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = ("black", "red", "green", "blue"))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = ("black" "red" "green" "blue"))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = col(expenditure$Region))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = col(expenditure$RegionNames))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"))
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#change plotting symbols
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, pch = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = c(expenditure$Region))
View(boxplot1)
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = c(expenditure$Region), pch = c(expenditure$Region))
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = c(expenditure$Region), pch = c(expenditure$Region))
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#change plotting symbols
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, pch = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = c(expenditure$Region), pch = c(expenditure$Region))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = c(black, red, green, blue), pch = c(expenditure$Region))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = c("black", "red", "green", "blue"), pch = c(expenditure$Region))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), fill = c("black", "red", "green", "blue"), pch = c(1, 2, 3, 4))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = ("black", "red", "green", "blue"), pch = c(1, 2, 3, 4))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = ("black" "red" "green" "blue"), pch = c(1, 2, 3, 4))
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = c("black", "red", "green", "blue"), pch = c(1, 2, 3, 4))
plot(expenditure$X1, expenditure$Y, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#add color by region
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#change plotting symbols
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, pch = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#add legend
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = c("black", "red", "green", "blue"), pch = c(1, 2, 3, 4))
View(boxplot1)
#Plot the relationship between y and x1.
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures", main = "Public Education Expenditures by Personal Income")
#Plot the relationship between y and x2.
plot(expenditure$X2, expenditure$Y, xlab = "Number of residents under 18 (per thousand)", ylab = "Per Capita Education Expenditure", main = "Public Education Expenditures by Number of Child Residents")
#Plot the relationship between y and x3.
plot(expenditure$Y, expenditure$X3, xlab = "Number of Urban Residents (per thousand)", ylab = "Per Capita Education Expenditures", main = "Public Education Expenditures by Urban Residency")
#
boxplot1 <- boxplot(expenditure$Y~expenditure$RegionNames, xlab = "Region", ylab = "Education Expenditures (per capita)", main = "Public Education Expenditures by Region")
#Plot the relationship between Y and X1.
plot(expenditure$X1, expenditure$Y, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
plot(expenditure$X1, expenditure$Y, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#Again, this scatterplot seems to display a moderately strong, positive, linear association between personal income per capita and the state's public education expenditures per capita.
#Add "Region" by adding colors.
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#Change plotting symbols according to Region.
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, pch = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#Add legend explaining the colors and symbols.
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = c("black", "red", "green", "blue"), pch = c(1, 2, 3, 4))
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
library(dplyr)
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS1")
#####################
# Problem 1
#####################
#data set
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#setting n as sample size
n <- 25
#finding z-score
z90 <- qnorm((1 - .90)/2, lower.tail = FALSE)
#finding the mean and standard deviation
sample_mean <- mean(y, na.rm = TRUE)
sample_sd <- sd(y, na.rm = TRUE)
#finding the lower and upper bounds of the interval
lower_90 <- sample_mean - (z90 * (sample_sd/sqrt(n)))
upper_90 <- sample_mean + (z90 * (sample_sd/sqrt(n)))
#calculating a 90% confidence interval
confint90 <- c(lower_90, upper_90)
confint90
#The confidence interval is (94.13283, 102.74717).
#This means that if we repeated this process 100 times, we can expect 90% of confidence intervals to contain the true population mean.
#####################
# Problem 2
#####################
#data set:
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#find the mean of the sample
mean(y)
#the mean score is 98.44
#one-sample, one-sided t-test:
t.test(y, mu=100, alternative="greater", conf.level = 0.95)
#If the average IQ of the students was 100, the probability of selecting a sample with a mean less than or equal to 98.44 is about 72%.
#####################
# Problem 3
#####################
#data set:
y <- c(1, 2, 1, 3, 4, 1, 1, 4, 2, 1, 3, 4, 3, 2, 1, 3, 4, 1, 2, 3, 1, 1, 2, 1, 1, 3, 4)
#converting numerical values into character variables:
y2 <- as.character(y)
y2[y=="1"] <- "freshman"
y2[y=="2"] <- "sophomore"
y2[y=="3"] <- "junior"
y2[y=="4"] <- "senior"
y2
#import expenditure data set
expenditure <- read.table("expenditure.txt", header=T)
#Plot the relationship between y and x1.
plot(x = expenditure$X1, y = expenditure$Y, xlab = "Per Capita Personal Income",  ylab = "Per Capita Education Expenditures", main = "Public Education Expenditures by Personal Income")
#This scatterplot shows a moderately strong positive linear correlation between the per capita expenditure on public education and per capita personal income within a state.
#Plot the relationship between y and x2.
plot(expenditure$X2, expenditure$Y, xlab = "Number of residents under 18 (per thousand)", ylab = "Per Capita Education Expenditure", main = "Public Education Expenditures by Number of Child Residents")
#This scatterplot indicates that there is no correlation between per capita public education expenditures and the number of residents under 18 years old in a state.
#Plot the relationship between y and x3.
plot(expenditure$Y, expenditure$X3, xlab = "Number of Urban Residents (per thousand)", ylab = "Per Capita Education Expenditures", main = "Public Education Expenditures by Urban Residency")
#This scatterplot may show a very weak positive (possibly linear?) association between per capita public education expenditures and the number of urban residents in a state.
#Plot the relationship between Y and Region.
class(expenditure$Region)
#Change "Region"'s variable type from integer to characters
expenditure$RegionNames <- as.character(expenditure$Region)
expenditure$RegionNames[expenditure$Region=="1"] <- "Northeast"
expenditure$RegionNames[expenditure$Region=="2"] <- "North Central"
expenditure$RegionNames[expenditure$Region=="3"] <- "South"
expenditure$RegionNames[expenditure$Region=="4"] <- "West"
#Since we have a continuous variable (education expenditures), and a categorical variable (region), we will use a boxplot.
boxplot1 <- boxplot(expenditure$Y~expenditure$RegionNames, xlab = "Region", ylab = "Education Expenditures (per capita)", main = "State Public Education Expenditures by Region")
#The boxplot displays the average public education expenditures by region. It appears that the West has the highest average expenditures out of all the regions, with an average expenditure around 110.
#Plot the relationship between Y and X1.
plot(expenditure$X1, expenditure$Y, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#Again, this scatterplot seems to display a moderately strong, positive, linear association between personal income per capita and the state's public education expenditures per capita.
#Add "Region" by adding colors.
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#Change plotting symbols according to Region.
plot(expenditure$X1, expenditure$Y,  col = expenditure$Region, pch = expenditure$Region, xlab = "Personal Income (per capita)", ylab = "Public Education Expenditures (per capita)", main = "Public Education Expenditures by Personal Income")
#Add legend explaining the colors and symbols.
legend("topleft", title = "Region", legend = c("Northeast", "North Central", "South", "West"), col = c("black", "red", "green", "blue"), pch = c(1, 2, 3, 4))
